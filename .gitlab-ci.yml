variables:
  DOCKER_PROXY: $REGISTRY_NAME:5556
  REGISTRY: $REGISTRY_NAME:$REGISTRY_PORT
  DOCKER_COMPOSE: 'docker-compose -f docker-compose.yml -f docker-compose.test.yml'
stages:
  - build
  - test
  - deploy

build app:
  image: ${DOCKER_PROXY}/tmaier/docker-compose:20.10
  stage: build
  services:
    - name: ${DOCKER_PROXY}/docker:20.10-dind-asyril
      alias: docker
  before_script:
    - docker version
    - docker-compose version
    # Login to our registry
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $REGISTRY
  variables:
    CONTAINER_IMAGE: $CI_PIPELINE_ID

  script:
    # Build and push the images to the registry
    - $DOCKER_COMPOSE build
    - $DOCKER_COMPOSE push

unit test:
  image: ${DOCKER_PROXY}/tmaier/docker-compose:20.10
  stage: test
  services:
    - name: ${DOCKER_PROXY}/docker:20.10-dind-asyril
      alias: docker
  before_script:
    - docker version
    - docker-compose version
  variables:
    CONTAINER_IMAGE: $CI_PIPELINE_ID
  script:
    - $DOCKER_COMPOSE pull --quiet log-viewer-test
    - $DOCKER_COMPOSE run --rm --no-deps log-viewer-test -c "npm run test:unit:ci"
  artifacts:
    when: always
    reports:
      junit:
        - test/jest/junit.xml
  interruptible: true

deploy app:
  image: ${DOCKER_PROXY}/tmaier/docker-compose:20.10
  stage: deploy
  services:
    - name: ${DOCKER_PROXY}/docker:20.10-dind-asyril
      alias: docker
  before_script:
    - docker version
    - docker-compose version
    - apk add git openssh-client
    # Adding SSH KEY for accessing host docker through ssh
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$BUILDSERVER_SSH_KEY" | tr -d '\r' | ssh-add -
    # Adding host key to avoid "Host key verification failed."
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
  variables:
    CONTAINER_IMAGE: $CI_PIPELINE_ID
    DEPLOY_HOST: $BUILDSERVER_HOST
  script:
    - export DOCKER_HOST=ssh://gitlab@$DEPLOY_HOST
    - $DOCKER_COMPOSE pull
    - $DOCKER_COMPOSE down --remove-orphans
    - $DOCKER_COMPOSE up -d --no-build
  environment:
    name: Registry
  when: manual
  needs: ['build app']
